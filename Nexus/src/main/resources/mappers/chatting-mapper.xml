<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="chattingMapper">
 
 	<resultMap type="ChatRoom" id="chatRoomResultSet">
 		<result column="room_no" property="roomNo"/>
 		<result column="room_title" property="roomTitle"/>
 		<result column="number_participants" property="numberParticipants"/>
 		<result column="create_date" property="createDate"/>
 		<result column="status" property="status"/>
 		<result column="count" property="count"/>
 		<result column="user_no" property="userNo"/>
 		<result column="user_name" property="userName"/>
 		<result column="origin_name" property="originName"/>
 		<result column="change_name" property="changeName"/>
 		<result column="last_chat" property="lastChat"/>
 		<result column="last_date" property="lastDate"/>
 	</resultMap>
 	
 	<resultMap type="ChatUser" id="chatUserResultSet">
 		<result column="room_no" property="roomNo"/>
 		<result column="user_no" property="userNo"/>
 		<result column="user_name" property="userName"/>
 		<result column="profile" property="profile"/>
 		<result column="status" property="status"/>
 		<result column="count" property="count"/>
 	</resultMap>
 	
 	<resultMap type="ChatMessage" id="chatMessageResultSet">
 		<result column="chatting_no" property="chattingNo"/>
 		<result column="chatting_content" property="chattingContent"/>
 		<result column="user_no" property="userNo"/>
 		<result column="user_name" property="userName"/>
 		<result column="create_date" property="createDate"/>
 		<result column="profile" property="profile"/>
 		<result column="invite" property="invite"/>
 	</resultMap>
 	
 	<resultMap type="Member" id="memberResultSet">
		<result column="user_no" property="userNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_pwd" property="userPwd"/>
		<result column="user_name" property="userName"/>
		<result column="user_nick" property="userNick"/>
		<result column="email" property="email"/>
		<result column="profile" property="profile"/>
		<result column="gender" property="gender"/>
		<result column="social" property="social"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="token" property="token"/>
		<result column="status" property="status"/>
	</resultMap>
 	
 	<select id="selectRoom" resultMap="chatRoomResultSet">
 	select 
 		  room_no
 		, number_participants
 		, origin_name
 		, change_name
 		, room_title
 		, last_chat
 		, last_date
		from tb_chat_room r
		join tb_chat_user u using(room_no)
		where u.user_no = #{userNo}
   	 and r.status = 'Y'
 	</select>
 	
 	<select id="selectRoomUser" resultMap="chatUserResultSet">
 	select 
	    u.user_no,
	    room_no,
	    user_name,
	    profile,
	    count
	from tb_chat_user u 
	join  tb_member m on(u.user_no = m.user_no)
	where room_no in (select room_no
	                            from tb_chat_room r
	                            join tb_chat_user u using(room_no)
	                            where u.user_no = #{userNo}
	                                and r.status = 'Y')
	        and u.user_no != #{userNo}
	        and u.status = 'S'
 	</select>
 
 	<select id="selectMessage" resultMap="chatMessageResultSet">
 		select chatting_no
	     , chatting_content
	     , user_no
	     , m.user_name
	     , create_date
	     , profile
	     , invite
	    from tb_chatting c
	    join tb_member m using(user_no) 
	  where room_no = #{rno}
	  order by chatting_no asc
 	</select>
 	<insert id="insertMessage">
 		insert 
 			into tb_chatting
 			values(seq_chatting.nextval, #{roomNo}, #{chattingContent}, null , null, #{userNo}, sysdate,#{invite})
 	</insert>
 	
 	<select id="searchUser" resultMap="memberResultSet">
 		select *
 		from tb_member
 		where user_name like '%${search}%'
 			and user_no != #{userNo}
 			and status = 'Y'
 	</select>
 	
 	<insert id="createRoom">
 		insert
 			into tb_chat_room
 			values(SEQ_CHAT_ROOM.NEXTVAL,2,sysdate,'Y',null,null,null,null,null)
 	</insert>
 	<insert id="insertChatUser">
 		insert
 			into tb_chat_user
 			values(#{userNo},seq_chat_room.currval,#{status},0)
 	</insert>
 	
 	<insert id="createGroupRoom">
 		insert 
 			into tb_chat_room
 			values(SEQ_CHAT_ROOM.NEXTVAL,#{numberParticipants},sysdate,'Y',#{originName},#{changeName},#{roomTitle},null,null)
 	</insert>
 	
 	<update id="updateMessage">
 		update
 			tb_chat_room
 		set last_chat = #{chattingContent},
 			last_date = sysdate
 		where room_no = #{roomNo}
 	</update>
 	<update id="unreadMessage">
 		update
 			tb_chat_user
 		set count = count + 1
 		where room_no = #{roomNo}
 		and user_no != #{userNo}
 	</update>
 	<select id="selectUnreadMessage" resultMap="chatUserResultSet">
 	select 
	    u.user_no,
	    room_no,
	    count
	from tb_chat_user u 
	join  tb_member m on(u.user_no = m.user_no)
	where room_no in (select room_no
	                            from tb_chat_room r
	                            join tb_chat_user u using(room_no)
	                            where u.user_no = #{userNo}
	                                and r.status = 'Y')
	        and u.user_no = #{userNo}
 	</select>
 	<update id="readMessage">
 		update
 			tb_chat_user
 		set count = 0
 		where room_no = #{roomNo}
 			and user_no = #{userNo}
 	</update>
 	<select id="updateRoom" resultMap="chatRoomResultSet" >
 		select 
 		  room_no
 		, number_participants
 		, origin_name
 		, change_name
 		, room_title
 		, last_chat
 		, last_date
        , u.count
		from tb_chat_room r
		join tb_chat_user u using(room_no)
		where u.user_no = #{userNo}
   	 and r.status = 'Y'
 	</select>
 	<select id="checkUser" resultMap="chatUserResultSet">
 	 	select *
 	 	from tb_chat_user
 	 	where user_no = #{userNo}
 	 		and room_no = #{roomNo}	
 	</select>
 	<insert id="inviteUser">
 		insert
 			into tb_chat_user
 			values(#{userNo},#{roomNo},'G',0)
 	</insert>
 	<select id="selectMember" resultMap="memberResultSet">
 		select *
 		from tb_member
 		where user_no = #{userNo}
 		and status = 'Y'
 	</select>
 	<insert id="firstEntry">
 		insert 
 			into tb_chatting
 			values(seq_chatting.nextval, seq_chat_room.currval, #{userName}, null , null, #{userNo}, sysdate,'O')
 	</insert>
 </mapper>